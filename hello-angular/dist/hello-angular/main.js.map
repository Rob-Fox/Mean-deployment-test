{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit-info/edit-info.component.css","webpack:///./src/app/edit-info/edit-info.component.html","webpack:///./src/app/edit-info/edit-info.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new-pet/new-pet.component.css","webpack:///./src/app/new-pet/new-pet.component.html","webpack:///./src/app/new-pet/new-pet.component.ts","webpack:///./src/app/pet-info/pet-info.component.css","webpack:///./src/app/pet-info/pet-info.component.html","webpack:///./src/app/pet-info/pet-info.component.ts","webpack:///./src/app/task/task.component.css","webpack:///./src/app/task/task.component.html","webpack:///./src/app/task/task.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NewPetComponent } from './new-pet/new-pet.component';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './task/task.component';\r\nimport { PetInfoComponent } from './pet-info/pet-info.component';\r\nimport { EditInfoComponent } from './edit-info/edit-info.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/pets', pathMatch: 'full' },\r\n    { path: 'pets', component: HomeComponent },\r\n    { path: 'pets/new', component: NewPetComponent },\r\n    { path: 'pets/:id', component: PetInfoComponent },\r\n    { path: 'pets/:id/edit', component: EditInfoComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\nexport const routingComponents = [NewPetComponent];\r\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>{{ title }}</h1>\\n  <h3>{{ tag_line }}</h3>\\n</div>\\n<router-outlet></router-outlet>\\n\\n\"","  import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Pet Shelter';\n  // tag_line_home = 'These pets are looking for a home!';\n  // pets = [];\n  // pet = {};\n  // // new_pet: any;\n  // edit_pet: any;\n  // // error_check: Boolean = false;\n  // // error_arr = [];\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n    ngOnInit() {\n      // // this.new_pet = { name: '', type: '', description: '' };\n      // this.edit_pet = {Name: ''};\n      // let pets_get = this._httpService.getPets();\n      // pets_get.subscribe(data => {\n      //   console.log('displaying pets', data);\n      //   this.pets = data['data'];\n      //   });\n      }\n    // on_submit() {\n    //   console.log('form submitted');\n    //   let add_pet = this._httpService.add_pet(this.new_pet);\n    //   // console.log(add_task);\n    //   add_pet.subscribe(data => {\n    //     console.log('Adding a pet', data['error']);\n    //     if ( data['error'] !==  '') {\n    //       this.error_check = true;\n    //       this.error_arr.push({'bullshit': data['error']['errors']['name']['message']});\n    //       console.log(this.error_arr);\n    //     }\n    //   });\n    //   this.new_pet = { name: '', type: '', description: '', skill_1: '', skill_2: '', skill_3: ''};\n    //   this.error_arr = [];\n    // }\n    // getPets() {\n    //   let observable_pets = this._httpService.getPets();\n    //   observable_pets.subscribe(data => {\n    //     console.log('Got all pets', data);\n    //     this.pets = data['data'];\n    //     console.log('Hey', this.pets);\n    //   });\n    //   // this._httpService.getTasks();\n    // }\n    // showPet(ID) {\n    //   let observable_pet = this._httpService.findPets(ID);\n    //   observable_pet.subscribe(data => {\n    //     console.log('Got specified pet', data);\n    //     this.pet = data['data'];\n    //     console.log('dude', this.pet);\n    //   });\n    // }\n\n    // on_edit(ID) {\n    //   console.log('Pet edited');\n    //   let editable_pet = this._httpService.edit_pet(ID, this.edit_pet);\n    //   // let editable_task = this._httpService.findTasks(ID);\n    //   editable_pet.subscribe(data => {\n    //     console.log('got an editable pet');\n\n    //   });\n    // }\n    // delete_pet(ID){\n    //   let deletable_pets = this._httpService.deletePets(ID);\n    // }\n    // go_new() {\n    //   this._router.navigate(['/new']);\n    // }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpClientModule} from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { HomeComponent } from './task/task.component';\nimport { PetInfoComponent } from './pet-info/pet-info.component';\nimport { EditInfoComponent } from './edit-info/edit-info.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    routingComponents,\n    PetInfoComponent,\n    EditInfoComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n    <h1>{{ title }}</h1>\\n    \\n</div>\\n<h3>{{ tag_line }}</h3>\\n    <div *ngIf='error_check'>\\n      <p *ngFor='let item of error_arr'>Error: {{ item.bullshit }}</p>\\n    </div>\\n<div>\\n  <form (submit)='edit_submit(edit_pet._id)'>\\n    Name: <input type='text' name='e_name' [(ngModel)]='edit_pet.Name'><br>\\n    Type: <input type='text' name='e_type' [(ngModel)]='edit_pet.type'><br>\\n    Description: <input type='text' name='e_details' [(ngModel)]='edit_pet.description'><br>\\n    Skill One: <input type='text' name='skill_one' [(ngModel)]='edit_pet.skill_1'><br>\\n    Skill Two: <input type='text' name='skill_two' [(ngModel)]='edit_pet.skill_2'><br>\\n    Skill Three: <input type='text' name='skill_three' [(ngModel)]='edit_pet.skill_3'><br>\\n    <button (click)='cancel_click()'>Cancel</button> &nbsp;\\n    <input type='submit' value='Edit Pet'>\\n  </form>\\n    <nav>\\n        \\n        <!-- <button (click)='change_pet(edit_pet._id)'>Edit Pet</button> -->\\n    </nav>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-info',\n  templateUrl: './edit-info.component.html',\n  styleUrls: ['./edit-info.component.css']\n})\nexport class EditInfoComponent implements OnInit {\n  tag_line = 'Edit Info';\n  edit_pet: any;\n  pets = [];\n  id: any;\n  error_check: Boolean = false;\n  error_arr = [];\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n  ngOnInit() {\n    this.edit_pet = { _id: '', Name: '', type: '', details: '', skill_1: '', skill_2: '', skill_3: '' };\n    this.id = this._route.snapshot.paramMap.get('id');\n    console.log('ID gotten from parammap', this.id);\n    this.get_pet(this.id);\n  }\n  get_pet(ID) {\n    let pet = this._httpService.findPets(ID);\n    pet.subscribe(data => {\n      console.log('Found pet data', data);\n      this.edit_pet = data['data'];\n    });\n  }\n  cancel_click() {\n    this._router.navigateByUrl('/pets');\n  }\n  edit_submit(ID) {\n    console.log('Pet edited');\n    let editable_pet = this._httpService.edit_pet(ID, this.edit_pet);\n    editable_pet.subscribe(data => {\n      console.log('got an editable pet');\n      if (data['error'] !== undefined){\n        console.log('Adding a pet', data['error']);\n        if (data['error']['errors'] !== undefined) {\n          console.log('there were errors');\n          if (data['error']['errors']['Name'] !== undefined) {\n            console.log('data[\"error\"][\"errors\"][\"Name\"]', data['error']['errors']['Name']);\n            this.error_check = true;\n            this.error_arr.push({ 'bullshit': data['error']['errors']['Name']['message'] });\n            // console.log('Error_arr', this.error_arr);\n          }\n          if (data['error']['errors']['type'] !== undefined) {\n            console.log('data[\"error\"][\"errors\"][\"type\"]', data['error']['errors']['type']);\n            this.error_check = true;\n            this.error_arr.push({ 'bullshit': data['error']['errors']['type']['message'] });\n            // console.log('Error_arr', this.error_arr);\n          }\n          if (data['error']['errors']['description'] !== undefined) {\n            console.log('data[\"error\"][\"errors\"][\"description\"]', data['error']['errors']['description']);\n            this.error_check = true;\n            this.error_arr.push({ 'bullshit': data['error']['errors']['description']['message'] });\n            console.log('Error_arr', this.error_arr);\n          }\n      }\n      }\n      else {\n        console.log('no errors');\n        this._router.navigate(['/pets']);\n      }\n    });\n      if (this.error_arr === [] ) {\n        console.log('empty errors');\n      }\n      this.error_arr = [];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class HttpService {\n  constructor(private _http: HttpClient) {\n   }\n\n  getPets() {\n    return this._http.get('/pets');\n  }\n  findPets(ID) {\n    console.log('made it to service');\n    return this._http.get('/pets/' + ID);\n  }\n  deletePets(ID) {\n    let tempObservable = this._http.delete('/pets/' + ID);\n    tempObservable.subscribe(data => console.log('Deleted pet with id: ', data));\n    return this._http.get('/pets');\n  }\n  add_pet(new_pet) {\n    console.log('made it to service');\n    console.log(new_pet);\n    return this._http.post('/pets', new_pet);\n  }\n  add_skills(new_skills) {\n    console.log('made it to service');\n    console.log(new_skills);\n    return this._http.post('/pets', new_skills);\n  }\n  edit_pet(ID, edit_pet) {\n    console.log('Made it to edit_pet in SERVICE', ID, edit_pet);\n    return this._http.put('/pets/' + ID, edit_pet);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n    <h1>{{ title }}</h1>\\n    <h3>{{ tag_line }}</h3>\\n</div>\\n<div>\\n    <h3> New Pet: </h3>\\n    <div *ngIf='error_check'>\\n        <p *ngFor='let item of error_arr'>Error: {{ item.bullshit }}</p>\\n    </div>\\n    <form (submit)='on_submit()'>\\n        <!-- <p> {{new_pet | json }} </p> -->\\n        Name:\\n        <input type='text' name='new_pet.Name' [(ngModel)]='new_pet.Name'>\\n        <br> Type:\\n        <input type='text' name='new_pet.type' [(ngModel)]='new_pet.type'>\\n        <br> Description:\\n        <input type='text' name='new_pet.description' [(ngModel)]='new_pet.description'>\\n        <br> Skill One:\\n        <input type='text' name='new_pet.skill_1' [(ngModel)]='new_pet.skill_1'>\\n        <br> Skill Two:\\n        <input type='text' name='new_pet.skill_2' [(ngModel)]='new_pet.skill_2'>\\n        <br> Skill Three:\\n        <input type='text' name='new_pet.skill_3' [(ngModel)]='new_pet.skill_3'>\\n        <br>\\n        <button (click)='cancel_click()'>Cancel</button> &nbsp;\\n        <input type='submit' value='Create pet'>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-pet',\n  templateUrl:  './new-pet.component.html',\n  styleUrls: ['./new-pet.component.css'],\n})\nexport class NewPetComponent implements OnInit {\n  // title = 'Pet Shelter';\n  tag_line = 'Know of a pet needing a home?';\n  new_pet: any;\n  error_check:  Boolean = false;\n  error_arr = [];\n\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.new_pet = { Name: '', type: '', description: '' };\n  }\n  on_submit() {\n    console.log('form submitted');\n    let add_pet = this._httpService.add_pet(this.new_pet);\n    // console.log(add_task);\n    add_pet.subscribe(data => {\n      console.log('Adding a pet', data['error']);\n      if ( data['error'] !== undefined) {\n        if (data['error']['errors']['Name'] !== undefined) {\n          console.log('data[\"error\"][\"errors\"][\"Name\"]', data['error']['errors']['Name']);\n          this.error_check = true;\n          this.error_arr.push({ 'bullshit': data['error']['errors']['Name']['message'] });\n          // console.log('Error_arr', this.error_arr);\n        }\n        else if (data['error']['errors']['type'] !== undefined) {\n          console.log('data[\"error\"][\"errors\"][\"type\"]', data['error']['errors']['type']);\n          this.error_check = true;\n          this.error_arr.push({ 'bullshit': data['error']['errors']['type']['message'] });\n          // console.log('Error_arr', this.error_arr);\n        }\n        else if (data['error']['errors']['description'] !== undefined) {\n          console.log('data[\"error\"][\"errors\"][\"description\"]', data['error']['errors']['description']);\n          this.error_check = true;\n          this.error_arr.push({ 'bullshit': data['error']['errors']['description']['message'] });\n          console.log('Error_arr', this.error_arr);\n        }\n      }\n      else {\n        this._router.navigate(['/pets']);\n      }\n    });\n    this.new_pet = { Name: '', type: '', description: '', skill_1: '', skill_2: '', skill_3: '' };\n    this.error_arr = [];\n    // this._router.navigate(['/pets']);\n  }\n  cancel_click() {\n    this._router.navigateByUrl('/pets');\n  }\n\n}\n","module.exports = \"#home_link{\\r\\n    display: inline-block;\\r\\n    float: right;\\r\\n    vertical-align: top;\\r\\n    color: hotpink;\\r\\n\\r\\n}\"","module.exports = \"<a id='home_link' [routerLink]=\\\"['/pets']\\\">Home</a>\\n<div style=\\\"text-align:center\\\">\\n    <h1>{{ title }}</h1>\\n</div>\\n<h3>{{ tag_line }}{{ edit_pet.Name }}</h3>\\n<div>\\n    <span class='header'>Pet Type: </span><span>{{ edit_pet.type }}</span><br>\\n    <span class='header'>Description: </span><span>{{ edit_pet.description }}</span><br>\\n    <span class='Header'>Likes: </span><span>{{ edit_pet.likes }}</span><br>\\n    <span class='header'>Skills: </span>\\n    <span class='skills' *ngIf='edit_pet.skill_1 !== \\\"\\\"'>{{ edit_pet.skill_1 }}</span><br>\\n    <span class='skills' *ngIf='edit_pet.skill_2 !== \\\"\\\"'>{{ edit_pet.skill_2 }}</span><br>\\n    <span class='skills' *ngIf='edit_pet.skill_3 !== \\\"\\\"'>{{ edit_pet.skill_3 }}</span><br>\\n    \\n    <nav>\\n        <!-- <a [routerLink]=\\\"['/pets']\\\">Cancel</a> &nbsp; -->\\n        <!-- <button (click)='cancel_click()'>Cancel</button> &nbsp; -->\\n        <!-- <div *ngIf='like_button'> -->\\n            <button *ngIf='like_button' (click)='like_click(edit_pet._id)'>Like</button> &nbsp;\\n        <!-- </div> -->\\n        <button (click)='remove_pet(edit_pet._id)'>Adopt</button>\\n    </nav>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-pet-info',\n  templateUrl: './pet-info.component.html',\n  styleUrls: ['./pet-info.component.css'],\n})\nexport class PetInfoComponent implements OnInit {\n  tag_line = 'Details about ';\n  edit_pet: any;\n  pets =  [];\n  id: any;\n  like_button: Boolean = true;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n  ngOnInit() {\n    this.edit_pet = { _id: '', Name: '', type: '', details: '', skill_1: '', skill_2: '', skill_3: '', likes: '' };\n    this.id = this._route.snapshot.paramMap.get('id');\n    console.log('ID gotten from parammap', this.id);\n    this.get_pet(this.id);\n  }\n  get_pet(ID) {\n    let pet =  this._httpService.findPets(ID);\n    pet.subscribe(data => {\n      console.log('Found pet data', data);\n      this.edit_pet = data['data'];\n    });\n  }\n  remove_pet(ID) {\n    let pet = this._httpService.deletePets(ID);\n    pet.subscribe(data => {\n      console.log('Component deleting pet');\n    });\n    this._router.navigateByUrl('/pets');\n  }\n  cancel_click() {\n    this._router.navigateByUrl('/pets');\n  }\n  like_click(ID) {\n    this.like_button = false;\n    this.edit_pet.likes += 1;\n    console.log(this.like_button);\n    let pet = this._httpService.edit_pet(ID, this.edit_pet);\n    pet.subscribe(data => {\n      console.log('got an editable pet');\n      // this._router.navigate(['/pets']);\n    });\n  }\n}\n","module.exports = \"tbody:nth-child(odd) {background: #CCC}\\r\\ntbody:nth-child(even) {background: #FFF}\\r\\nthead{\\r\\n    background-color: #CCC;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n    <h1>{{ title }}</h1>\\n    <h3>{{ tag_line }}</h3>\\n</div>\\n<a [routerLink]=\\\"['/pets/new']\\\">Add a pet to the shelter</a>\\n<div>\\n    \\n</div>\\n<table>\\n    <thead>\\n        <td>Name</td>\\n        <td>Type</td>\\n        <td>Actions</td>\\n    </thead>\\n    <tbody *ngFor='let item of pets'>\\n\\n        <tr>\\n            <td>{{item.Name}}</td>\\n            <td>{{item.type}}</td>\\n            <td>\\n                <button (click)='showPet(item._id)' class='details_button'>Show Details</button>\\n                <button (click)='on_edit(item._id)' class='edit_button'>Edit Pet</button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n<!-- <app-task *ngIf='pet' [petToShow]='pet'></app-task> -->\\n<!-- <h2 *ngIf='task'>Task Details: </h2>\\n<ul *ngIf='task'>\\n  <li>ID: {{task._id}}</li>\\n  <li>Completed?: {{task.completed}}</li>\\n  <li>Title: {{task.title}}</li>\\n  <li>Description: {{task.description}}</li>\\n  </ul> -->\\n<!-- <div>\\n<h3> New Pet: </h3>\\n<p *ngIf='error_check'>\\n  <span *ngFor='let item of error_arr'>Error: {{ item.bullshit }}</span>\\n</p>\\n<form (submit)='on_submit()'>\\n  <p> {{new_pet | json }} </p>\\n  Name: <input type='text' name='new_pet.name' [(ngModel)]='new_pet.name'><br>\\n  Type: <input type='text' name='new_pet.type' [(ngModel)]='new_pet.type'><br>\\n  Description: <input type='text' name='new_pet.description' [(ngModel)]='new_pet.description'><br>\\n  Skill One: <input type='text' name='new_pet.skill_1' [(ngModel)]='new_pet.skill_1'><br>\\n  SKill Two: <input type='text' name='new_pet.skill_2' [(ngModel)]='new_pet.skill_2'><br>\\n  Skill Three: <input type='text' name='new_pet.skill_3' [(ngModel)]='new_pet.skill_3'><br>\\n  <input type='submit' value='Create pet'>\\n</form>\\n</div>\\n<div *ngIf='pet'>\\n<h3> Edit Pet: </h3>\\n<form (submit)='on_edit(author._id)'>\\n  <p> {{ pet.name }}</p>\\n  Name: <input type='text' name='edit_pet.name' [(ngModel)]='edit_pet.name' value={{pet.name}}><br>\\n  <input type='submit' value='Edit pet'>\\n</form>\\n</div> -->\\n<!-- <button [routerLink]=\\\"['/alpha']\\\">Load Alpha</button>\\n<button [routerLink]=\\\"['/beta']\\\">Load Beta</button> -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class HomeComponent implements OnInit {\n  // title = 'Pet Shelter';\n  tag_line = 'These pets are looking for a home!';\n  pets = [];\n  pet = {};\n  // new_pet: any;\n  edit_pet: any;\n  // error_check: Boolean = false;\n  // error_arr = [];\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n  ngOnInit() {\n    // this.new_pet = { name: '', type: '', description: '' };\n    this.edit_pet = { Name: '' };\n    let pets_get = this._httpService.getPets();\n    pets_get.subscribe(data => {\n      console.log('displaying pets', data);\n      this.pets = data['data'];\n    });\n  }\n  // on_submit() {\n  //   console.log('form submitted');\n  //   let add_pet = this._httpService.add_pet(this.new_pet);\n  //   // console.log(add_task);\n  //   add_pet.subscribe(data => {\n  //     console.log('Adding a pet', data['error']);\n  //     if ( data['error'] !==  '') {\n  //       this.error_check = true;\n  //       this.error_arr.push({'bullshit': data['error']['errors']['name']['message']});\n  //       console.log(this.error_arr);\n  //     }\n  //   });\n  //   this.new_pet = { name: '', type: '', description: '', skill_1: '', skill_2: '', skill_3: ''};\n  //   this.error_arr = [];\n  // }\n  getPets() {\n    let observable_pets = this._httpService.getPets();\n    observable_pets.subscribe(data => {\n      console.log('Got all pets', data);\n      this.pets = data['data'];\n      console.log('Hey', this.pets);\n    });\n    // this._httpService.getTasks();\n  }\n  showPet(ID) {\n    console.log('attempting to show pet', ID);\n    let show_pet_observable = this._httpService.findPets(ID);\n    show_pet_observable.subscribe(data => {\n      console.log('made it in to subscribe', data['data']);\n      this.pet = data['data'];\n    });\n    this._router.navigate(['/pets/' + ID]);\n    // let observable_pet = this._httpService.findPets(ID);\n    // observable_pet.subscribe(data => {\n    //   console.log('Got specified pet', data);\n    //   this.pet = data['data'];\n    //   console.log('dude', this.pet);\n    // });\n  }\n\n  on_edit(ID) {\n    // console.log('Pet edited');\n    // let editable_pet = this._httpService.edit_pet(ID, this.edit_pet);\n    // // let editable_task = this._httpService.findTasks(ID);\n    // editable_pet.subscribe(data => {\n    //   console.log('got an editable pet');\n    // });\n    this._router.navigate(['/pets/' + ID + '/edit']);\n  }\n  delete_pet(ID) {\n    let deletable_pets = this._httpService.deletePets(ID);\n  }\n  go_new() {\n    this._router.navigate(['/new']);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}